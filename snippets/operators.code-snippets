{
    "operator-pub-crate": {
        "scope": "rust",
        "prefix": "pubcrate",
        "body": [
            "pub(crate) ",
        ],
        "description": "pub(crate) "
    },
    
    
    "operator-mod": {
        "scope": "rust",
        "prefix": "mod ",
        "body": [
            "mod $1;",
        ],
        "description": "mod name;"
    },

    
    "operator-use": {
        "scope": "rust",
        "prefix": "use ",
        "body": [
            "use $1::${2:*};",
        ],
        "description": "use name::...;"
    },


    "operator-use-brace": {
        "scope": "rust",
        "prefix": "use{",
        "body": [
            "use $1::{ $2 };",
        ],
        "description": "use name::...;"
    },


    "operator-mod-use": {
        "scope": "rust",
        "prefix": "mod use ",
        "body": [
            "mod $1;  use $1::${2:*};",
        ],
        "description": "mod name;  use name::...;"
    },


    "operator-mod-use-brace": {
        "scope": "rust",
        "prefix": "mod use {",
        "body": [
            "mod $1;  use $1::{ $2 };",
        ],
        "description": "mod name;  use name::{};"
    },


    "operator-mod-pub-use": {
        "scope": "rust",
        "prefix": "mod pub use ",
        "body": [
            "mod $1;  pub use $1::${2:*};",
        ],
        "description": "pub mod name;  pub use name::...;"
    },


    "operator-mod-pub-use-brace": {
        "scope": "rust",
        "prefix": "mod pub use {",
        "body": [
            "mod $1;  pub use $1::{ $2 };",
        ],
        "description": "pub mod name;  pub use name::{};"
    },


    "operator-use-crate": {
        "scope": "rust",
        "prefix": "use crate::",
        "body": [
            "use crate::$1;",
        ],
        "description": "use crate::...;"
    },


    "operator-use-super": {
        "scope": "rust",
        "prefix": "use super::",
        "body": [
            "use super::$1;",
        ],
        "description": "use super::...;"
    },


    "operator-use-prelude": {
        "scope": "rust",
        "prefix": "use crate::prelude::",
        "body": [
            "use crate::prelude::${1:*};",
        ],
        "description": "use crate::prelude::*;"
    },


    "operator-use-regex": {
        "scope": "rust",
        "prefix": "use regex::Regex",
        "body": [
            "use regex::${1:Regex};",
        ],
        "description": "use regex::Regex"
    },


    "operator-use-proc_macro": {
        "scope": "rust",
        "prefix": "use proc_macro::",
        "body": [
            "use proc_macro::$1;",
        ],
        "description": "proc_macro::...;"
    },


    "operator-use-proc_macro2": {
        "scope": "rust",
        "prefix": "use proc_macro2::",
        "body": [
            "use proc_macro2::$1;",
        ],
        "description": "proc_macro2::...;"
    },


    "operator-use-quote": {
        "scope": "rust",
        "prefix": "use quote::",
        "body": [
            "use quote::${1:quote};",
        ],
        "description": "quote::...;"
    },


    "operator-use-syn": {
        "scope": "rust",
        "prefix": "use syn::",
        "body": [
            "use syn::{ $1 };",
        ],
        "description": "syn::{ ... };"
    },


    "operator-use-venial": {
        "scope": "rust",
        "prefix": "use venial::",
        "body": [
            "use venial::{ $1 };",
        ],
        "description": "venial::{ ... };"
    },


    "operator-use-darling": {
        "scope": "rust",
        "prefix": "use darling::",
        "body": [
            "use darling::$1;",
        ],
        "description": "darling::...;"
    },
    
    
	"operator-type": {
        "scope": "rust",
        "prefix": "type ",
        "body": [
            "type $1 = $2;",
        ],
        "description": "type Name = ...;"
    },
    

    "operator-let": {
        "scope": "rust",
        "prefix": "let ",
        "body": [
            "let $1 = $2;",
        ],
        "description": "let name = ...;"
    },


    "operator-let-typed": {
        "scope": "rust",
        "prefix": "let >",
        "body": [
            "let $1: $2 = $3;",
        ],
        "description": "let name: ... = ...;"
    },


    "operator-let-mutable": {
        "scope": "rust",
        "prefix": "let mut ",
        "body": [
            "let mut $1 = $2;",
        ],
        "description": "let mut name = ...;"
    },


    "operator-let-typed-mutable": {
        "scope": "rust",
        "prefix": "let mut >",
        "body": [
            "let mut $1: $2 = $3;",
        ],
        "description": "let mut name: ... = ...;"
    },


    "operator-const": {
        "scope": "rust",
        "prefix": "const ",
        "body": [
            "const $1: $2 = $3;",
        ],
        "description": "const name: ... = ...;"
    },


    "operator-static": {
        "scope": "rust",
        "prefix": "static ",
        "body": [
            "static $1: $2 = $3;",
        ],
        "description": "static name: ... = ...;"
    },


    "operator-return": {
        "scope": "rust",
        "prefix": "return ",
        "body": [
            "return $1;",
        ],
        "description": "return ...;"
    },


    "operator-break": {
        "scope": "rust",
        "prefix": "break",
        "body": [
            "break;",
        ],
        "description": "break;"
    },
    
    
    "operator-break-return": {
        "scope": "rust",
        "prefix": "break ",
        "body": [
            "break $1;",
        ],
        "description": "break ...;"
    },

    
    "operator-continue": {
        "scope": "rust",
        "prefix": "continue",
        "body": [
            "continue;",
        ],
        "description": "continue;"
    },
}
